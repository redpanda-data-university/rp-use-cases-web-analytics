version: '3.7'
services:
  # Redpanda cluster
  redpanda-1:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.7
    container_name: redpanda-1
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '1'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda-1:29092,OUTSIDE://redpanda-1:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda-1:28082,OUTSIDE://localhost:8082
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda-1:33145
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092
  
  redpanda-console:
    image: docker.redpanda.com/vectorized/console:v2.1.1
    container_name: redpanda-console
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-1:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-1:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-1:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda-1

  clickhouse:
    image: clickhouse/clickhouse-server
    user: "101:101"
    container_name: clickhouse
    hostname: clickhouse
    volumes:
      - ${PWD}/fs/volumes/clickhouse/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ${PWD}/fs/volumes/clickhouse/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml
    ports:
      - "8123:8123"
      - "9000:9000"
    depends_on:
      - redpanda-1

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    # volumes:
    #   - ./grafana/config:/etc/grafana-config
    #   - ./grafana/datasources:/etc/grafana/provisioning/datasources
    #   - ./grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
    #   - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
  hono:
    image: node:20
    container_name: hono
    hostname: hono
    ports:
      - "8787:8787"
    volumes:
      - ./edge-service:/app
    working_dir: /app
    command: >
      /bin/sh -c "npm install && npm run dev"

  marketing-site:
    image: node:20
    container_name: marketing-site
    hostname: marketing-site
    ports:
      - "4321:4321"
    volumes:
      - ./marketing-site:/app
    working_dir: /app
    command: >
      /bin/sh -c "npm install && npm run dev"